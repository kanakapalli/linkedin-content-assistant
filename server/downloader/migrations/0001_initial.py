# Generated by Django 4.2.10 on 2025-04-04 15:55

from django.db import migrations, models
import django.db.models.deletion
import downloader.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='LinkedInVideo',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('post_url', models.URLField(max_length=1000)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('video_file', models.FileField(blank=True, null=True, upload_to=downloader.models.video_upload_path)),
                ('file_size', models.FloatField(blank=True, help_text='Size in MB', null=True)),
                ('extracted_at', models.DateTimeField(blank=True, null=True)),
                ('title', models.CharField(blank=True, max_length=500, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('linkedin_email', models.CharField(blank=True, max_length=255, null=True)),
                ('linkedin_password', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'LinkedIn Video',
                'verbose_name_plural': 'LinkedIn Videos',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='VideoMetadata',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author_name', models.CharField(blank=True, max_length=255, null=True)),
                ('author_headline', models.CharField(blank=True, max_length=500, null=True)),
                ('author_profile_url', models.URLField(blank=True, max_length=1000, null=True)),
                ('author_username', models.CharField(blank=True, max_length=255, null=True)),
                ('post_text', models.TextField(blank=True, null=True)),
                ('published_date', models.CharField(blank=True, max_length=100, null=True)),
                ('likes_count', models.CharField(blank=True, max_length=100, null=True)),
                ('comments_count', models.CharField(blank=True, max_length=100, null=True)),
                ('embed_id', models.CharField(blank=True, max_length=255, null=True)),
                ('media_id', models.CharField(blank=True, max_length=255, null=True)),
                ('resolution', models.CharField(blank=True, max_length=100, null=True)),
                ('quality', models.CharField(blank=True, max_length=100, null=True)),
                ('has_auth_token', models.BooleanField(default=False)),
                ('open_graph', models.JSONField(blank=True, null=True)),
                ('twitter_card', models.JSONField(blank=True, null=True)),
                ('video', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='metadata', to='downloader.linkedinvideo')),
            ],
        ),
        migrations.CreateModel(
            name='HashTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('videos', models.ManyToManyField(related_name='hashtags', to='downloader.linkedinvideo')),
            ],
        ),
    ]
